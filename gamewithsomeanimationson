import pygame
import random

#Define various variables

WIDTH = 50
HEIGHT = 50
FPS = 30


#Defines walking
walkRight = [pygame.image.load('R1.png'), pygame.image.load('R2.png'), pygame.image.load('R3.png'), pygame.image.load('R4.png'), pygame.image.load('R5.png'), pygame.image.load('R6.png'), pygame.image.load('R7.png'), pygame.image.load('R8.png'), pygame.image.load('R9.png')]
walkLeft = [pygame.image.load('L1.png'), pygame.image.load('L2.png'), pygame.image.load('L3.png'), pygame.image.load('L4.png'), pygame.image.load('L5.png'), pygame.image.load('L6.png'), pygame.image.load('L7.png'), pygame.image.load('L8.png'), pygame.image.load('L9.png')]
# Define Colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)
X = 20
Y = 440
SCREENWIDTH = 500
#Defines Velocity of an Object
VEL = 5
left = False
right = False
walkCount = 0
#Walking animations for the guy
bg = pygame.image.load('bg.jpg')
char = pygame.image.load('standing.png')


#Start Pygame and open a game window

pygame.init()
pygame.mixer.init()
#sets size of window
screen = pygame.display.set_mode((500, 500))
#Sets title name
pygame.display.set_caption("Amruth's Final Game")
clock = pygame.time.Clock()



#Game loop

isJump = False
JumpCount = 10



running = True
while running:
    #delays the window open
    pygame.time.delay(10)
    #keep loop running at the right speed
    clock.tick(FPS)
    # Process input (events)
    for event in pygame.event.get():
        #check for closing window
        if event.type == pygame.QUIT:
            running = False

    # Defines the keypress varible
    keypress = pygame.key.get_pressed()
    #This is what reconizes keypresses
    #Keypress 'A'
    if keypress[pygame.K_a] and X > VEL:
        X -= VEL
    # Keypress 'Dh'
    if keypress[pygame.K_d] and X < SCREENWIDTH - VEL - WIDTH:
        X += VEL
    if not(isJump):
        #Flip if u want to have it stuck
        #if keypress[pygame.K_s] and Y < SCREENWIDTH - VEL - HEIGHT:
            #Y += VEL
        #Flip if u want to have it stuck to bottom
        #if keypress[pygame.K_w] and Y > VEL:
            #Y -= VEL
        #Jump Function
        if keypress[pygame.K_SPACE]:
            isJump = True

    else:
        if JumpCount >= -10:
            neg = 1
            if JumpCount < 0:
                neg = -1
            Y -= (JumpCount ** 2) * 0.5 * neg
            JumpCount -= 1

        else:
            isJump = False
            JumpCount = 10

    #make a rectangle
    pygame.draw.rect(screen, (255, 0, 0), (X, Y, WIDTH, HEIGHT))
    # Update the image
    pygame.display.update()

    # Draw / Render
    screen.fill(BLUE)



pygame.quit()
